{"version":3,"sources":["assets/logo.svg","services/ApiService.js","services/UserService.js","components/registrationForm/RegistrationForm.js","components/loginForm/LoginForm.js","components/authenticationOptions/AuthenticationOptions.js","pages/AuthenticationOptionsPage.js","services/TaskService.js","components/task/Task.js","pages/TasksPage.js","components/authButton/AuthButton.js","components/menuBar/MenuBar.js","pages/HelloPage.js","pages/App.js","index.js"],"names":["module","exports","getEndpointUrl","url","getHeaders","hasBody","user","localStorage","getItem","token","bearerToken","contentType","ApiService","fetch","headers","response","status","Error","json","data","method","body","JSON","stringify","apiService","UserService","doPost","setItem","success","removeItem","userService","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","initialValues","name","email","password","acceptedTerms","validationSchema","Yup","max","required","oneOf","min","repeatPassword","test","value","this","parent","withRouter","changeLoggedIn","history","classes","useState","open","setOpen","errorDialogOpen","setErrorDialogOpen","registerUser","values","a","setSubmitting","push","console","error","message","onSubmit","errors","isSubmitting","isValidating","touched","Box","mb","FormGroup","as","TextField","label","component","FormHelperText","type","mt","Grid","container","direction","alignItems","className","Typography","Button","variant","disabled","Backdrop","CircularProgress","Dialog","onClose","aria-labelledby","DialogTitle","id","loginUser","TabPanel","props","children","index","other","role","hidden","p","root","flexGrow","backgroundColor","palette","background","paper","AuthenticationOptions","React","setValue","AppBar","position","Tabs","onChange","event","newValue","centered","Tab","AuthenticationOptionsPage","Container","fixed","justify","item","xs","TaskService","doGet","doPut","doDelete","taskService","Task","completed","description","changeTaskList","isCompleted","setIsCompleted","isEditing","setIsEditing","updatedDescInputValue","setUpdatedDescInputValue","taskDescription","setTaskDescription","changeCompletedStatus","updateTask","deleteTask","e","preventDefault","Card","CardContent","flex","CardActions","Checkbox","checked","inputProps","FormControl","InputLabel","htmlFor","Input","target","Fab","aria-label","size","IconButton","onClick","TasksPage","tasks","setTasks","taskDesc","setTaskDesc","userName","parse","useEffect","getTasks","getAllTasks","tasksResponse","addTask","taskId","filteredTasks","filter","task","_id","align","spacing","map","key","AuthButton","authButton","isLoggedIn","logout","logoutUser","to","MenuBar","Toolbar","HelloPage","src","logo","alt","App","setIsLoggedIn","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9973e2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","const TODO_API_ENDPOINT = 'https://api-nodejs-todolist.herokuapp.com';\r\n\r\nfunction getEndpointUrl(url = '') {\r\n    return TODO_API_ENDPOINT + url;\r\n}\r\n\r\nfunction getHeaders(hasBody = false) {\r\n    let user = localStorage.getItem('user');\r\n    let token = localStorage.getItem('token');\r\n\r\n    let bearerToken = user && token ? 'Bearer ' + token : '';\r\n    let contentType = hasBody ? 'application/json' : '';\r\n\r\n    return {\r\n        'Content-Type': contentType,\r\n        'Authorization': bearerToken,\r\n    };\r\n}\r\n\r\nexport default class ApiService {\r\n\r\n    async doGet(url = '') {\r\n        const response = await fetch(getEndpointUrl(url), {\r\n            headers: getHeaders(),\r\n        });\r\n\r\n        if (response.status >= 400) {\r\n            throw new Error(`Error during request. Url: ${url}`);\r\n        }\r\n\r\n        return await response.json();\r\n    }\r\n\r\n    async doPost(url = '', data = {}) {\r\n        const response = await fetch(getEndpointUrl(url), {\r\n            method: 'POST',\r\n            headers: getHeaders(true),\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        if (response.status >= 400) {\r\n            throw new Error(`Error during request. Url: ${url}, data: ${data}`);\r\n        }\r\n\r\n        return await response.json();\r\n    }\r\n\r\n    async doDelete(url = '') {\r\n        const response = await fetch(getEndpointUrl(url), {\r\n            method: 'DELETE',\r\n            headers: getHeaders(),\r\n        });\r\n\r\n        if (response.status >= 400) {\r\n            throw new Error(`Error during request. Url: ${url}}`);\r\n        }\r\n\r\n        return await response.json();\r\n    }\r\n\r\n    async doPut(url = '', data = {}) {\r\n        const response = await fetch(getEndpointUrl(url), {\r\n            method: 'PUT',\r\n            headers: getHeaders(true),\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        if (response.status >= 400) {\r\n            throw new Error(`Error during request. Url: ${url}, data: ${data}`);\r\n        }\r\n\r\n        return await response.json();\r\n    }\r\n}","import ApiService from \"./ApiService\";\r\n\r\nconst apiService = new ApiService();\r\n\r\nexport default class UserService {\r\n    async registerUser(data = {}) {\r\n        let {user, token} = await apiService.doPost('/user/register', data);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }\r\n\r\n    async loginUser(data = {}) {\r\n        let {user, token} = await apiService.doPost('/user/login', data);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }\r\n\r\n    async logoutUser() {\r\n        let response = await apiService.doPost('/user/logout');\r\n        \r\n        if (response.success) {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n        }\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { TextField, Button, FormGroup, FormHelperText, Box, Backdrop, CircularProgress, makeStyles, FormControl, InputLabel, Typography, Grid, Dialog, DialogTitle } from '@material-ui/core';\r\nimport UserService from '../../services/UserService';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst userService = new UserService();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    acceptedTerms: false,\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n    name: Yup.string()\r\n        .max(15, \"Must be 15 characters or less\")\r\n        .required(\"Required\"),\r\n    email: Yup.string()\r\n        .email(\"Invalid email addresss\")\r\n        .required(\"Required\"),\r\n    acceptedTerms: Yup.boolean()\r\n        .required(\"Required\")\r\n        .oneOf([true], \"You must accept the terms and conditions.\"),\r\n    password: Yup.string()\r\n        .min(8, \"Password should contain at least 8 characters\")\r\n        .required(\"Required\"),\r\n    repeatPassword: Yup.string()\r\n        .min(8, \"Password should contain at least 8 characters\")\r\n        .required(\"Required\")\r\n        .test('passwords-match', 'Passwords must match', function (value) {\r\n            return this.parent.password === value;\r\n        }),\r\n});\r\n\r\nconst RegistrationForm = ({ changeLoggedIn, history }) => {\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [errorDialogOpen, setErrorDialogOpen] = useState(false);\r\n\r\n    const registerUser = async (values, { setSubmitting }) => {\r\n        setOpen(true);\r\n\r\n        try {\r\n            await userService.registerUser(values);\r\n            setSubmitting(true);\r\n            changeLoggedIn(true);\r\n            history.push('/');\r\n         } catch (e) {\r\n            setSubmitting(true);\r\n            setOpen(false);\r\n            console.error(e.message, e.name);\r\n            setErrorDialogOpen(true);\r\n         }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Registration form</h1>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={registerUser}\r\n            >\r\n                {({ values, errors, isSubmitting, isValidating, touched }) => (\r\n                    <Form>\r\n                        <Box mb={2}>\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"name\"\r\n                                    label=\"First Name\"\r\n                                    error={touched.name && !!errors.name}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"name\" error />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    label=\"Email\"\r\n                                    error={touched.email && !!errors.email}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"email\" error />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    label=\"Password\"\r\n                                    error={touched.password && !!errors.password}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"password\" error />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"repeatPassword\"\r\n                                    type=\"password\"\r\n                                    label=\"Repeat Password\"\r\n                                    error={touched.repeatPassword && !!errors.repeatPassword}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"repeatPassword\" error />\r\n                            </FormGroup>\r\n\r\n                            <Box mt={2}>\r\n                                <FormGroup>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        alignItems=\"center\"\r\n                                    >\r\n                                        <Field\r\n                                            className=\"termsAndConditionsCheckbox\"\r\n                                            name=\"acceptedTerms\"\r\n                                            type=\"checkbox\"\r\n                                            label=\"Accept Terms And Conditions\"\r\n                                            error={touched.acceptedTerms && !!errors.acceptedTerms}\r\n                                        />\r\n                                        <Typography>\r\n                                            Terms and conditions\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <ErrorMessage component={FormHelperText} name=\"acceptedTerms\" error />\r\n                                </FormGroup>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={isSubmitting || isValidating}>\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n            <Backdrop className={classes.backdrop} open={open}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n\r\n            <Dialog onClose={() => setErrorDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={errorDialogOpen}>\r\n                <DialogTitle id=\"simple-dialog-title\">Error during registration. This email is already in use.</DialogTitle>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(RegistrationForm);","import React, { useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { TextField, Button, FormGroup, FormHelperText, Box, Backdrop, CircularProgress, makeStyles, Dialog, DialogTitle } from '@material-ui/core';\r\nimport UserService from '../../services/UserService';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n}));\r\n\r\nconst initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string()\r\n        .email(\"Invalid email address\")\r\n        .required(\"Required\"),\r\n    password: Yup.string()\r\n        .required(\"Required\"),\r\n});\r\n\r\nconst userService = new UserService();\r\n\r\nconst LoginForm = ({history, changeLoggedIn}) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    const [errorDialogOpen, setErrorDialogOpen] = useState(false);\r\n\r\n    const loginUser = async (values, { setSubmitting }) => {\r\n        setOpen(true);\r\n\r\n        try {\r\n            await userService.loginUser(values);\r\n            setSubmitting(true);\r\n            changeLoggedIn(true);\r\n            history.push('/');\r\n         } catch (e) {\r\n            setSubmitting(true);\r\n            setOpen(false);\r\n            console.error(e.message, e.name);\r\n            setErrorDialogOpen(true);\r\n         }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <h1>Login form</h1>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={loginUser}\r\n            >\r\n                {({ values, errors, isSubmitting, isValidating, touched}) => (\r\n                    <Form>\r\n                        <Box mb={2}>\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    label=\"Email\"\r\n                                    error={touched.email && !!errors.email}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"email\" error/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    label=\"Password\"\r\n                                    error={touched.password && !!errors.password}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"password\" error/>\r\n                            </FormGroup>\r\n                        </Box>\r\n\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={isSubmitting || isValidating}>\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            \r\n            <Backdrop className={classes.backdrop} open={open}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n\r\n            <Dialog onClose={() => setErrorDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={errorDialogOpen}>\r\n                <DialogTitle id=\"simple-dialog-title\">Email or password is incorrect.</DialogTitle>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport RegistrationForm from '../registrationForm/RegistrationForm';\r\nimport LoginForm from '../loginForm/LoginForm';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function AuthenticationOptions({changeLoggedIn}) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={value} onChange={handleChange} centered>\r\n                    <Tab label=\"Login\" />\r\n                    <Tab label=\"Register\" />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <LoginForm changeLoggedIn={changeLoggedIn}/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <RegistrationForm changeLoggedIn={changeLoggedIn}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","import { Container, Grid, Box } from '@material-ui/core/';\r\nimport React from 'react';\r\nimport AuthenticationOptions from '../components/authenticationOptions/AuthenticationOptions';\r\n\r\nexport default function AuthenticationOptionsPage({changeLoggedIn}) {\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Box mt={5}>\r\n                <Grid container justify=\"center\">\r\n                    <Grid item xs={8}>\r\n                        <AuthenticationOptions changeLoggedIn={changeLoggedIn}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import ApiService from \"./ApiService\";\r\n\r\nconst apiService = new ApiService();\r\n\r\nexport default class TaskService {\r\n    async getAllTasks() {\r\n        return await apiService.doGet('/task');\r\n    }\r\n\r\n    async addTask(data = {}) {\r\n        return await apiService.doPost('/task', data);\r\n    }\r\n\r\n    async updateTask(id, data = {}) {\r\n        return await apiService.doPut(`/task/${id}`, data);\r\n    }\r\n\r\n    async deleteTask(id) {\r\n        return await apiService.doDelete(`/task/${id}`);\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Checkbox, Grid, Card, CardContent, IconButton, CardActions, FormControl, InputLabel, Input, Button, Fab } from '@material-ui/core';\r\nimport TaskService from '../../services/TaskService';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport './Task.css';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nconst taskService = new TaskService();\r\n\r\nconst Task = ({ completed, description, id, changeTaskList }) => {\r\n    const [isCompleted, setIsCompleted] = useState(completed);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [updatedDescInputValue, setUpdatedDescInputValue] = useState(description);\r\n    const [taskDescription, setTaskDescription] = useState(description);\r\n\r\n    const changeCompletedStatus = async () => {\r\n        await taskService.updateTask(id, {\r\n            \"completed\": !isCompleted\r\n        });\r\n\r\n        setIsCompleted(!isCompleted);\r\n    }\r\n\r\n    const deleteTask = async (e) => {\r\n        const { success } = await taskService.deleteTask(id);\r\n        if (success) {\r\n            changeTaskList(id);\r\n        }\r\n    }\r\n\r\n    const updateTask = async (e) => {\r\n        e.preventDefault();\r\n        const response = await taskService.updateTask(id, {\r\n            \"description\": updatedDescInputValue\r\n        });\r\n        setTaskDescription(response.data.description);\r\n        setIsEditing(!isEditing);\r\n    }\r\n     \r\n    const editToggle = () => {\r\n        setUpdatedDescInputValue(description);\r\n        setIsEditing(!isEditing);\r\n    }\r\n\r\n    const updateDescInputValue = (e) => {\r\n        setUpdatedDescInputValue(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={6}>\r\n            <Card variant=\"outlined\">\r\n                <CardContent flex=\"row\">\r\n                    <CardActions>\r\n                        <Checkbox\r\n                            checked={isCompleted}\r\n                            onChange={changeCompletedStatus}\r\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                        />\r\n                        {!isEditing &&\r\n                            <h1 className={isCompleted ? 'task-done' : ''}>{taskDescription}</h1>\r\n                        }\r\n                        {isEditing &&\r\n                            <form onSubmit={updateTask}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"my-input\">Add new task</InputLabel>\r\n                                    <Input value={updatedDescInputValue} onChange={updateDescInputValue}/>\r\n                                </FormControl>\r\n                                <Fab color=\"primary\" type=\"submit\" aria-label=\"add\" size=\"small\">\r\n                                    <CheckIcon/>\r\n                                </Fab>\r\n                            </form>\r\n                        }\r\n                        <IconButton aria-label=\"delete\" onClick={deleteTask}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                        {!isCompleted &&\r\n                            <IconButton aria-label=\"delete\" \r\n                                color={isEditing ? 'primary' : 'default'} \r\n                                onClick={editToggle}\r\n                            >\r\n                                <EditIcon />\r\n                            </IconButton>\r\n                        }\r\n                    </CardActions>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Task;","import { Container, FormControl, InputLabel, Input, Grid, Fab, Typography, Box } from '@material-ui/core/';\r\nimport React, { useEffect } from 'react';\r\nimport TaskService from '../services/TaskService'\r\nimport { useState } from 'react';\r\nimport Task from '../components/task/Task';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst taskService = new TaskService();\r\n\r\nconst TasksPage = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [taskDesc, setTaskDesc] = useState('');\r\n\r\n    const userName = JSON.parse(localStorage.getItem('user')).name;\r\n\r\n    useEffect(() => {\r\n        getTasks();\r\n    }, []);\r\n\r\n    const getTasks = async () => {\r\n        let tasksResponse = await taskService.getAllTasks();\r\n        setTasks(tasksResponse.data);\r\n    }\r\n\r\n    const updateTaskDesc = (e) => {\r\n        setTaskDesc(e.target.value);\r\n    }\r\n\r\n    const addTask = async (e) => {\r\n        e.preventDefault();\r\n        const {success, data} = await taskService.addTask({\r\n            \"description\": taskDesc,\r\n        });\r\n        setTaskDesc('');\r\n\r\n        if(success) {\r\n            setTasks([...tasks, data]);\r\n        }\r\n    }\r\n\r\n    const changeTaskList = (taskId) => {\r\n        const filteredTasks = tasks.filter(task => task._id !== taskId)\r\n        setTasks(filteredTasks);\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            <Box mt={3} mb={3}>\r\n                <Typography variant=\"h4\" align=\"center\">\r\n                    Hi {userName}, here is your To-Do list\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Box mt={3} mb={3}>\r\n                <form onSubmit={addTask}>\r\n                    <Grid \r\n                        container\r\n                        direction=\"row\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"my-input\">Add new task</InputLabel>\r\n                            <Input value={taskDesc} onChange={updateTaskDesc} />\r\n                        </FormControl>\r\n                        <Fab color=\"primary\" type=\"submit\" aria-label=\"add\" size=\"small\">\r\n                                <AddIcon />\r\n                        </Fab>\r\n                    </Grid>\r\n                </form>\r\n            </Box>\r\n            <Grid container justify=\"center\" spacing={3}>\r\n                {tasks.map(task => (\r\n                    <Task\r\n                        key={task._id}\r\n                        id={task._id}\r\n                        description={task.description}\r\n                        completed={task.completed}\r\n                        changeTaskList={changeTaskList}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default TasksPage;\r\n","import { Button } from '@material-ui/core/';\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport UserService from '../../services/UserService';\r\n\r\nconst userService = new UserService();\r\n\r\nexport default function AuthButton({ isLoggedIn, changeLoggedIn }) {\r\n    let authButton;\r\n\r\n    let logout = async () => {\r\n        await userService.logoutUser();\r\n        changeLoggedIn(false);\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        authButton = (\r\n            <Link to='/' onClick={logout}>\r\n                <Button color=\"inherit\">Logout</Button>\r\n            </Link>\r\n        );\r\n    } else {\r\n        authButton = (\r\n            <Link to='/login'>\r\n                <Button color=\"inherit\">Login</Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {authButton}\r\n        </>\r\n    );\r\n};\r\n","import {\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  Container\r\n} from '@material-ui/core/';\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './MenuBar.css';\r\nimport AuthButton from '../authButton/AuthButton';\r\n\r\nconst MenuBar = ({isLoggedIn, changeLoggedIn}) => {\r\n\r\n  return (\r\n    <AppBar position=\"static\" >\r\n      <Container>\r\n        <Toolbar className=\"menu-bar\">\r\n          <Link to=\"/\">\r\n            <Typography variant=\"h6\" className=\"\" >\r\n              React TODO\r\n            </Typography>\r\n          </Link>\r\n\r\n          <AuthButton changeLoggedIn={changeLoggedIn} isLoggedIn={isLoggedIn}/>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default MenuBar;","import { Container, Typography } from '@material-ui/core/';\r\nimport React from 'react';\r\nimport logo from '../assets//logo.svg';\r\n\r\nexport default function HelloPage() {\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <Typography variant=\"h5\" >\r\n                        Hi, this is simple To-Do list React app\r\n                    </Typography>\r\n                    <Typography>\r\n                        Please login to proceed\r\n                    </Typography>\r\n                </header>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route, Switch\n} from \"react-router-dom\";\nimport AuthenticationOptionsPage from './AuthenticationOptionsPage';\nimport TasksPage from './TasksPage';\nimport MenuBar from '../components/menuBar/MenuBar';\nimport HelloPage from './HelloPage';\nimport './App.css'\n\nfunction App() {\n  let [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem('token') && localStorage.getItem('user'));\n\n  return (\n    <Router basename=\"/react-todo/\">\n      <MenuBar changeLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn}/>\n      \n      <Switch>\n        <Route exact path=\"/\">\n          {!isLoggedIn && <HelloPage/>}\n          {isLoggedIn && <TasksPage/>}\n        </Route>\n        <Route path=\"/login\">\n          <AuthenticationOptionsPage changeLoggedIn={setIsLoggedIn}/>\n        </Route>\n      </Switch>\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}