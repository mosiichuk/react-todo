{"version":3,"sources":["logo.svg","services/ApiService.js","services/UserService.js","components/registrationForm/RegistrationForm.js","components/loginForm/LoginForm.js","components/authenticationOptions/AuthenticationOptions.js","pages/AuthenticationOptionsPage.js","components/LoginButton/LoginButton.js","components/MenuBar/MenuBar.js","pages/HelloPage.js","App.js","index.js"],"names":["module","exports","getEndpointUrl","url","getHeaders","hasBody","user","localStorage","getItem","token","bearerToken","contentType","apiService","fetch","headers","response","json","data","method","body","JSON","stringify","UserService","doPost","setItem","userService","initialValues","name","email","password","acceptedTerms","validationSchema","Yup","max","required","oneOf","min","repeatPassword","test","value","this","parent","RegistrationForm","onSubmit","values","registerUser","console","log","errors","isSubmitting","isValidating","touched","Box","mb","FormGroup","as","TextField","label","error","component","FormHelperText","type","Button","variant","color","disabled","LoginForm","loginUser","TabPanel","props","children","index","other","role","hidden","id","aria-labelledby","p","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","AuthenticationOptions","classes","React","useState","setValue","className","AppBar","position","Tabs","onChange","event","newValue","centered","aria-label","Tab","HelloPage","Container","fixed","mt","Grid","container","justify","item","xs","LoginButton","isLoggedIn","to","MenuBar","Toolbar","Typography","src","logo","alt","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ded97eb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","const TODO_API_ENDPOINT = 'https://api-nodejs-todolist.herokuapp.com';\r\n\r\n\r\nfunction getEndpointUrl(url = '') {\r\n    return TODO_API_ENDPOINT + url;\r\n}\r\n\r\nfunction getHeaders(hasBody = false) {\r\n    let user = localStorage.getItem('user');\r\n    let token = localStorage.getItem('token');\r\n\r\n    let bearerToken = user && token ? 'Bearer ' + token : '';\r\n    let contentType = hasBody ? 'application/json' : '';\r\n\r\n    return {\r\n        'Content-Type': contentType,\r\n        'Authorization': bearerToken,\r\n    };\r\n\r\n}\r\nexport default class ApiService {\r\n\r\n    async doGet(url = '') {\r\n        const response = await fetch(getEndpointUrl(url), {\r\n            headers: getHeaders(),\r\n        });\r\n\r\n        return await response.json();\r\n    }\r\n\r\n    async doPost(url = '', data = {}) {\r\n        const response = await fetch(getEndpointUrl(url), {\r\n            method: 'POST',\r\n            headers: getHeaders(true),\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        return await response.json();\r\n    }\r\n\r\n    async doDelete(url = '') {\r\n        const response = await fetch(getEndpointUrl(url), {\r\n            method: 'DELETE',\r\n            headers: getHeaders(),\r\n        });\r\n\r\n        return await response.json();\r\n    }\r\n\r\n    async doPut(url = '', data = {}) {\r\n        const response = await fetch(getEndpointUrl(url), {\r\n            method: 'PUT',\r\n            headers: getHeaders(true),\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        return await response.json();\r\n    }\r\n}","import ApiService from \"./ApiService\";\r\n\r\nconst apiService = new ApiService();\r\n\r\nexport default class UserService {\r\n    async registerUser(data = {}) {\r\n        let {user, token} = await apiService.doPost('/user/register', data);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', user);\r\n    }\r\n\r\n    async loginUser(data = {}) {\r\n        let {user, token} = await apiService.doPost('/user/login', data);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', user);\r\n    }\r\n\r\n    async logoutUser() {\r\n        await apiService.doPost('/user/logout');\r\n    }\r\n}","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { TextField, Button, FormGroup, FormHelperText, Box } from '@material-ui/core';\r\nimport UserService from '../../services/UserService';\r\n\r\nconst userService = new UserService();\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    acceptedTerms: false,\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n    name: Yup.string()\r\n        .max(15, \"Must be 15 characters or less\")\r\n        .required(\"Required\"),\r\n    email: Yup.string()\r\n        .email(\"Invalid email addresss\")\r\n        .required(\"Required\"),\r\n    acceptedTerms: Yup.boolean()\r\n        .required(\"Required\")\r\n        .oneOf([true], \"You must accept the terms and conditions.\"),\r\n    password: Yup.string()\r\n        .min(8, \"Password should contain at least 8 characters\")\r\n        .required(\"Required\"),\r\n    repeatPassword: Yup.string()\r\n        .min(8, \"Password should contain at least 8 characters\")\r\n        .required(\"Required\")\r\n        .test('passwords-match', 'Passwords must match', function (value) {\r\n            return this.parent.password === value;\r\n        }),\r\n});\r\n\r\nexport default function RegistrationForm() {\r\n    return (\r\n        <>\r\n            <h1>Registration form</h1>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values) => {\r\n                    userService.registerUser(values);\r\n                    console.log(JSON.stringify(values, null, 4));\r\n                }}\r\n            >\r\n                {({ values, errors, isSubmitting, isValidating, touched}) => (\r\n                    <Form>\r\n                        <Box mb={2}>\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"name\"\r\n                                    label=\"First Name\"\r\n                                    error={touched.name && !!errors.name}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"name\" error/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    label=\"Email\"\r\n                                    error={touched.email && !!errors.email}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"email\" error/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    label=\"Password\"\r\n                                    error={touched.password && !!errors.password}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"password\" error/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"repeatPassword\"\r\n                                    type=\"password\"\r\n                                    label=\"Repeat Password\"\r\n                                    error={touched.repeatPassword && !!errors.repeatPassword}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"repeatPassword\" error/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    name=\"acceptedTerms\"\r\n                                    type=\"checkbox\"\r\n                                    label=\"Accept Terms And Conditions\"\r\n                                    error={touched.acceptedTerms && !!errors.acceptedTerms}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"acceptedTerms\" error/>\r\n                            </FormGroup>\r\n                        </Box>\r\n                        \r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={isSubmitting || isValidating}>\r\n                            Submit\r\n                        </Button>\r\n                        {/* <pre>{JSON.stringify(values, null, 4)}</pre>\r\n                        <pre>{JSON.stringify(errors, null, 4)}</pre> */}\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { TextField, Button, FormGroup, FormHelperText, Box } from '@material-ui/core';\r\nimport UserService from '../../services/UserService';\r\n\r\nconst initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string()\r\n        .email(\"Invalid email addresss\")\r\n        .required(\"Required\"),\r\n    password: Yup.string()\r\n        .required(\"Required\"),\r\n});\r\n\r\nconst userService = new UserService();\r\n\r\nexport default function LoginForm() {\r\n    \r\n    return (\r\n        <>\r\n            <h1>Login form</h1>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values) => { \r\n                    userService.loginUser(values);\r\n                }}\r\n            >\r\n                {({ values, errors, isSubmitting, isValidating, touched}) => (\r\n                    <Form>\r\n                        <Box mb={2}>\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    label=\"Email\"\r\n                                    error={touched.email && !!errors.email}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"email\" error/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    label=\"Password\"\r\n                                    error={touched.password && !!errors.password}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"password\" error/>\r\n                            </FormGroup>\r\n                        </Box>\r\n\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={isSubmitting || isValidating}>\r\n                            Submit\r\n                        </Button>\r\n                        {/* <pre>{JSON.stringify(values, null, 4)}</pre>\r\n                        <pre>{JSON.stringify(errors, null, 4)}</pre> */}\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport RegistrationForm from '../registrationForm/RegistrationForm';\r\nimport LoginForm from '../loginForm/LoginForm';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function AuthenticationOptions() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={value} onChange={handleChange} centered aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Login\" />\r\n                    <Tab label=\"Register\" />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <LoginForm/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <RegistrationForm/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","import { Container, Grid, Box } from '@material-ui/core/';\r\nimport React from 'react';\r\nimport AuthenticationOptions from '../components/authenticationOptions/AuthenticationOptions';\r\n\r\nexport default function HelloPage() {\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Box mt={5}>\r\n                <Grid container justify=\"center\">\r\n                    <Grid item xs={8}>\r\n                        <AuthenticationOptions />\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import {\r\n    AppBar,\r\n    Button,\r\n    Typography,\r\n    Toolbar,\r\n    Container\r\n} from '@material-ui/core/';\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LoginButton() {\r\n\r\n    let isLoggedIn = localStorage.getItem('token') && localStorage.getItem('user');\r\n\r\n    return (\r\n        <Link to={ isLoggedIn ? '/logout' : '/login'}>\r\n            <Button color=\"inherit\"> { isLoggedIn ? 'Logout' : 'Login'} </Button>\r\n        </Link>\r\n    );\r\n};\r\n","import {\r\n  AppBar,\r\n  Button,\r\n  Typography,\r\n  Toolbar,\r\n  Container\r\n} from '@material-ui/core/';\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './ManuBar.css';\r\nimport LoginButton from '../LoginButton/LoginButton';\r\n\r\nexport default function MenuBar() {\r\n\r\n  return (\r\n    <AppBar position=\"static\" >\r\n      <Container>\r\n        <Toolbar className=\"menu-bar\">\r\n          <Link to=\"/\">\r\n            <Typography variant=\"h6\" className=\"\" >\r\n              React TODO\r\n            </Typography>\r\n          </Link>\r\n\r\n          <LoginButton/>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\n","import { Container } from '@material-ui/core/';\r\nimport React from 'react';\r\nimport logo from '../logo.svg';\r\n\r\nexport default function HelloPage() {\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <p className=\"App-link\">\r\n                        React Todo list app\r\n                    </p>\r\n                </header>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n","import { AppBar, makeStyles, Button, Typography, Toolbar } from '@material-ui/core/';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route, Switch, Link\n} from \"react-router-dom\";\nimport AuthenticationOptionsPage from './pages/AuthenticationOptionsPage';\nimport MenuBar from './components/MenuBar/MenuBar';\nimport HelloPage from './pages/HelloPage';\nimport './App.css'\n\nfunction App() {\n\n  return (\n    <Router>\n      <MenuBar />\n      <Switch>\n        <Route exact path=\"/\">\n          <HelloPage />\n        </Route>\n        <Route path=\"/login\">\n          <AuthenticationOptionsPage />\n        </Route>\n      </Switch>\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}