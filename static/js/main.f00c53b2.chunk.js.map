{"version":3,"sources":["assets/logo.svg","services/ApiService.js","services/UserService.js","components/registrationForm/RegistrationForm.js","components/loginForm/LoginForm.js","components/authenticationOptions/AuthenticationOptions.js","pages/AuthenticationOptionsPage.js","services/TaskService.js","pages/TasksPage.js","components/authButton/AuthButton.js","components/menuBar/MenuBar.js","pages/HelloPage.js","pages/App.js","index.js"],"names":["module","exports","getEndpointUrl","url","getHeaders","hasBody","user","localStorage","getItem","token","bearerToken","contentType","ApiService","fetch","headers","response","json","data","method","body","JSON","stringify","apiService","UserService","doPost","setItem","success","removeItem","userService","initialValues","name","email","password","acceptedTerms","validationSchema","Yup","max","required","oneOf","min","repeatPassword","test","value","this","parent","withRouter","changeLoggedIn","history","onSubmit","values","a","setSubmitting","registerUser","push","errors","isSubmitting","isValidating","touched","Box","mb","FormGroup","as","TextField","label","error","component","FormHelperText","type","Button","variant","color","disabled","loginUser","TabPanel","props","children","index","other","role","hidden","id","aria-labelledby","p","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","AuthenticationOptions","classes","React","useState","setValue","className","AppBar","position","Tabs","onChange","event","newValue","centered","Tab","AuthenticationOptionsPage","Container","fixed","mt","Grid","container","justify","item","xs","taskService","doGet","doPut","doDelete","TasksPage","tasks","setTasks","useEffect","getTasks","getAllTasks","console","log","AuthButton","authButton","isLoggedIn","logout","logoutUser","to","onClick","MenuBar","Toolbar","Typography","HelloPage","src","logo","alt","App","setIsLoggedIn","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,kC,0XCE3C,SAASC,IAA0B,IAAXC,EAAU,uDAAJ,GAC1B,MAHsB,4CAGKA,EAG/B,SAASC,IAA6B,IAAlBC,EAAiB,wDAC7BC,EAAOC,aAAaC,QAAQ,QAC5BC,EAAQF,aAAaC,QAAQ,SAE7BE,EAAcJ,GAAQG,EAAQ,UAAYA,EAAQ,GAClDE,EAAcN,EAAU,mBAAqB,GAEjD,MAAO,CACH,eAAgBM,EAChB,cAAiBD,G,IAKJE,E,qOAELT,E,+BAAM,G,SACSU,MAAMX,EAAeC,GAAM,CAC9CW,QAASV,M,cADPW,E,gBAIOA,EAASC,O,+SAGbb,E,+BAAM,GAAIc,E,+BAAO,G,SACHJ,MAAMX,EAAeC,GAAM,CAC9Ce,OAAQ,OACRJ,QAASV,GAAW,GACpBe,KAAMC,KAAKC,UAAUJ,K,cAHnBF,E,gBAMOA,EAASC,O,+SAGXb,E,+BAAM,G,SACMU,MAAMX,EAAeC,GAAM,CAC9Ce,OAAQ,SACRJ,QAASV,M,cAFPW,E,gBAKOA,EAASC,O,8SAGdb,E,+BAAM,GAAIc,E,+BAAO,G,SACFJ,MAAMX,EAAeC,GAAM,CAC9Ce,OAAQ,MACRJ,QAASV,GAAW,GACpBe,KAAMC,KAAKC,UAAUJ,K,cAHnBF,E,gBAMOA,EAASC,O,gJCtDxBM,EAAa,IAAIV,EAEFW,E,gPACEN,E,+BAAO,G,SACIK,EAAWE,OAAO,iBAAkBP,G,gBAAzDX,E,EAAAA,KAAMG,E,EAAAA,MACXF,aAAakB,QAAQ,QAAShB,GAC9BF,aAAakB,QAAQ,OAAQnB,G,4QAGjBW,E,+BAAO,G,SACOK,EAAWE,OAAO,cAAeP,G,gBAAtDX,E,EAAAA,KAAMG,E,EAAAA,MACXF,aAAakB,QAAQ,QAAShB,GAC9BF,aAAakB,QAAQ,OAAQnB,G,8PAIRgB,EAAWE,OAAO,gB,cAE1BE,UACTnB,aAAaoB,WAAW,SACxBpB,aAAaoB,WAAW,S,wGCf9BC,EAAc,IAAIL,EAElBM,EAAgB,CAClBC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,eAAe,GAGbC,EAAmBC,IAAW,CAChCL,KAAMK,MACDC,IAAI,GAAI,iCACRC,SAAS,YACdN,MAAOI,MACFJ,MAAM,0BACNM,SAAS,YACdJ,cAAeE,MACVE,SAAS,YACTC,MAAM,EAAC,GAAO,6CACnBN,SAAUG,MACLI,IAAI,EAAG,iDACPF,SAAS,YACdG,eAAgBL,MACXI,IAAI,EAAG,iDACPF,SAAS,YACTI,KAAK,kBAAmB,wBAAwB,SAAUC,GACvD,OAAOC,KAAKC,OAAOZ,WAAaU,OAuF7BG,eAnFU,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,QACvC,OACI,oCACI,iDACA,kBAAC,IAAD,CACIlB,cAAeA,EACfK,iBAAkBA,EAClBc,SAAQ,uCAAG,WAAOC,EAAP,kBAAAC,EAAA,6DAAgBC,EAAhB,EAAgBA,cAAhB,SACDvB,EAAYwB,aAAaH,GADxB,OAEPE,GAAc,GACdL,GAAe,GACfC,EAAQM,KAAK,KAJN,2CAAH,0DAOP,cAAGJ,OAAH,IAAWK,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,QAA/C,OACG,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CACIC,GAAIC,IACJhC,KAAK,OACLiC,MAAM,aACNC,MAAOP,EAAQ3B,QAAUwB,EAAOxB,OAEpC,kBAAC,IAAD,CAAcmC,UAAWC,IAAgBpC,KAAK,OAAOkC,OAAK,KAG9D,kBAACJ,EAAA,EAAD,KACI,kBAAC,IAAD,CACIC,GAAIC,IACJhC,KAAK,QACLqC,KAAK,QACLJ,MAAM,QACNC,MAAOP,EAAQ1B,SAAWuB,EAAOvB,QAErC,kBAAC,IAAD,CAAckC,UAAWC,IAAgBpC,KAAK,QAAQkC,OAAK,KAG/D,kBAACJ,EAAA,EAAD,KACI,kBAAC,IAAD,CACIC,GAAIC,IACJhC,KAAK,WACLqC,KAAK,WACLJ,MAAM,WACNC,MAAOP,EAAQzB,YAAcsB,EAAOtB,WAExC,kBAAC,IAAD,CAAciC,UAAWC,IAAgBpC,KAAK,WAAWkC,OAAK,KAGlE,kBAACJ,EAAA,EAAD,KACI,kBAAC,IAAD,CACIC,GAAIC,IACJhC,KAAK,iBACLqC,KAAK,WACLJ,MAAM,kBACNC,MAAOP,EAAQjB,kBAAoBc,EAAOd,iBAE9C,kBAAC,IAAD,CAAcyB,UAAWC,IAAgBpC,KAAK,iBAAiBkC,OAAK,KAGxE,kBAACJ,EAAA,EAAD,KACI,kBAAC,IAAD,CACI9B,KAAK,gBACLqC,KAAK,WACLJ,MAAM,8BACNC,MAAOP,EAAQxB,iBAAmBqB,EAAOrB,gBAE7C,kBAAC,IAAD,CAAcgC,UAAWC,IAAgBpC,KAAK,gBAAgBkC,OAAK,MAI3E,kBAACI,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUH,KAAK,SAASI,SAAUhB,GAAgBC,GAApF,kBCrGlB3B,EAAgB,CAClBE,MAAO,GACPC,SAAU,IAGRE,EAAmBC,IAAW,CAChCJ,MAAOI,MACFJ,MAAM,yBACNM,SAAS,YACdL,SAAUG,MACLE,SAAS,cAGZT,EAAc,IAAIL,EAuDTsB,eArDG,SAAC,GAA+B,IAA9BE,EAA6B,EAA7BA,QAASD,EAAoB,EAApBA,eAEzB,OACI,oCACI,0CACA,kBAAC,IAAD,CACIjB,cAAeA,EACfK,iBAAkBA,EAClBc,SAAQ,uCAAE,WAAOC,EAAP,kBAAAC,EAAA,6DAAgBC,EAAhB,EAAgBA,cAAhB,SACAvB,EAAY4C,UAAUvB,GADtB,OAENE,GAAc,GACdL,GAAe,GACfC,EAAQM,KAAK,KAJP,2CAAF,0DAOP,cAAGJ,OAAH,IAAWK,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,QAA/C,OACG,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CACIC,GAAIC,IACJhC,KAAK,QACLqC,KAAK,QACLJ,MAAM,QACNC,MAAOP,EAAQ1B,SAAWuB,EAAOvB,QAErC,kBAAC,IAAD,CAAckC,UAAWC,IAAgBpC,KAAK,QAAQkC,OAAK,KAG/D,kBAACJ,EAAA,EAAD,KACI,kBAAC,IAAD,CACIC,GAAIC,IACJhC,KAAK,WACLqC,KAAK,WACLJ,MAAM,WACNC,MAAOP,EAAQzB,YAAcsB,EAAOtB,WAExC,kBAAC,IAAD,CAAciC,UAAWC,IAAgBpC,KAAK,WAAWkC,OAAK,MAItE,kBAACI,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUH,KAAK,SAASI,SAAUhB,GAAgBC,GAApF,kBCrDxB,SAASiB,EAASC,GAAQ,IACdC,EAAqCD,EAArCC,SAAUjC,EAA2BgC,EAA3BhC,MAAOkC,EAAoBF,EAApBE,MAAUC,EADd,YACwBH,EADxB,8BAGrB,OACI,uCACII,KAAK,WACLC,OAAQrC,IAAUkC,EAClBI,GAAE,0BAAqBJ,GACvBK,kBAAA,qBAA+BL,IAC3BC,GAEHnC,IAAUkC,GACP,kBAAClB,EAAA,EAAD,CAAKwB,EAAG,GACHP,IAarB,IAAMQ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,EACVC,gBAAiBH,EAAMI,QAAQC,WAAWC,WAInC,SAASC,EAAT,GAAkD,IAAlB9C,EAAiB,EAAjBA,eACrC+C,EAAUV,IAD4C,EAElCW,IAAMC,SAAS,GAFmB,mBAErDrD,EAFqD,KAE9CsD,EAF8C,KAQ5D,OACI,yBAAKC,UAAWJ,EAAQP,MACpB,kBAACY,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,CAAM1D,MAAOA,EAAO2D,SAPX,SAACC,EAAOC,GACzBP,EAASO,IAM2CC,UAAQ,GAChD,kBAACC,EAAA,EAAD,CAAK1C,MAAM,UACX,kBAAC0C,EAAA,EAAD,CAAK1C,MAAM,eAGnB,kBAACU,EAAD,CAAU/B,MAAOA,EAAOkC,MAAO,GAC3B,kBAAC,EAAD,CAAW9B,eAAgBA,KAE/B,kBAAC2B,EAAD,CAAU/B,MAAOA,EAAOkC,MAAO,GAC3B,kBAAC,EAAD,CAAkB9B,eAAgBA,MC3DnC,SAAS4D,EAAT,GAAsD,IAAlB5D,EAAiB,EAAjBA,eAE/C,OACI,kBAAC6D,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAAClD,EAAA,EAAD,CAAKmD,GAAI,GACL,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACpB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACtB,EAAD,CAAuB9C,eAAgBA,QCT/D,IAAMxB,EAAa,IAAIV,ECGjBuG,EAAc,I,gODCC7F,EAAW8F,MAAM,S,4SAGpBnG,E,+BAAO,G,SACJK,EAAWE,OAAO,QAASP,G,mNAG3B+D,G,0FAAI/D,E,+BAAO,G,SACXK,EAAW+F,MAAX,gBAA0BrC,GAAM/D,G,oNAGhC+D,G,iFACP1D,EAAWgG,SAAX,gBAA6BtC,I,0GCuB5BuC,EAlCG,WAAO,IAAD,EACMxB,mBAAS,IADf,mBACbyB,EADa,KACNC,EADM,KAGpBC,qBAAU,WACND,EAASE,OACV,IAEH,IAAMA,EAAQ,uCAAG,sBAAAzE,EAAA,sEACPiE,EAAYS,cADL,OAEbC,QAAQC,IAAIN,GAFC,2CAAH,qDAKd,OACI,kBAACb,EAAA,EAAD,KACI,yBAAKV,UAAU,OACX,4C,kBCjBVrE,G,OAAc,IAAIL,GAET,SAASwG,EAAT,GAAqD,IAC5DC,EAD6BC,EAA8B,EAA9BA,WAAYnF,EAAkB,EAAlBA,eAGzCoF,EAAM,uCAAG,sBAAAhF,EAAA,sEACHtB,EAAYuG,aADT,OAETrF,GAAe,GAFN,2CAAH,qDAmBV,OAbIkF,EADAC,EAEI,kBAAC,IAAD,CAAMG,GAAG,IAAIC,QAASH,GAClB,kBAAC9D,EAAA,EAAD,CAAQE,MAAM,WAAd,WAKJ,kBAAC,IAAD,CAAM8D,GAAG,UACL,kBAAChE,EAAA,EAAD,CAAQE,MAAM,WAAd,UAMR,oCACK0D,GCpBb,IAmBeM,EAnBC,SAAC,GAAkC,IAAjCL,EAAgC,EAAhCA,WAAYnF,EAAoB,EAApBA,eAE5B,OACE,kBAACoD,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACQ,EAAA,EAAD,KACE,kBAAC4B,EAAA,EAAD,CAAStC,UAAU,YACjB,kBAAC,IAAD,CAAMmC,GAAG,KACP,kBAACI,EAAA,EAAD,CAAYnE,QAAQ,KAAK4B,UAAU,IAAnC,eAKF,kBAAC8B,EAAD,CAAYjF,eAAgBA,EAAgBmF,WAAYA,Q,qBCnBnD,SAASQ,KAEpB,OACI,kBAAC9B,EAAA,EAAD,KACI,yBAAKV,UAAU,OACX,4BAAQA,UAAU,cACd,yBAAKyC,IAAKC,KAAM1C,UAAU,WAAW2C,IAAI,SACzC,uBAAG3C,UAAU,YAAb,0B,OCoBL4C,OApBf,WAAgB,IAAD,EACqB9C,mBAASxF,aAAaC,QAAQ,UAAYD,aAAaC,QAAQ,SADpF,mBACRyH,EADQ,KACIa,EADJ,KAGb,OACE,kBAAC,IAAD,CAAQC,SAAS,gBACf,kBAAC,EAAD,CAASjG,eAAgBgG,EAAeb,WAAYA,IAEpD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,MACdhB,GAAc,kBAACQ,GAAD,MACfR,GAAc,kBAAC,EAAD,OAEjB,kBAAC,IAAD,CAAOgB,KAAK,UACV,kBAACvC,EAAD,CAA2B5D,eAAgBgG,QCnBrDI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f00c53b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","const TODO_API_ENDPOINT = 'https://api-nodejs-todolist.herokuapp.com';\r\n\r\nfunction getEndpointUrl(url = '') {\r\n    return TODO_API_ENDPOINT + url;\r\n}\r\n\r\nfunction getHeaders(hasBody = false) {\r\n    let user = localStorage.getItem('user');\r\n    let token = localStorage.getItem('token');\r\n\r\n    let bearerToken = user && token ? 'Bearer ' + token : '';\r\n    let contentType = hasBody ? 'application/json' : '';\r\n\r\n    return {\r\n        'Content-Type': contentType,\r\n        'Authorization': bearerToken,\r\n    };\r\n\r\n}\r\n\r\nexport default class ApiService {\r\n\r\n    async doGet(url = '') {\r\n        const response = await fetch(getEndpointUrl(url), {\r\n            headers: getHeaders(),\r\n        });\r\n\r\n        return await response.json();\r\n    }\r\n\r\n    async doPost(url = '', data = {}) {\r\n        const response = await fetch(getEndpointUrl(url), {\r\n            method: 'POST',\r\n            headers: getHeaders(true),\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        return await response.json();\r\n    }\r\n\r\n    async doDelete(url = '') {\r\n        const response = await fetch(getEndpointUrl(url), {\r\n            method: 'DELETE',\r\n            headers: getHeaders(),\r\n        });\r\n\r\n        return await response.json();\r\n    }\r\n\r\n    async doPut(url = '', data = {}) {\r\n        const response = await fetch(getEndpointUrl(url), {\r\n            method: 'PUT',\r\n            headers: getHeaders(true),\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        return await response.json();\r\n    }\r\n}","import ApiService from \"./ApiService\";\r\n\r\nconst apiService = new ApiService();\r\n\r\nexport default class UserService {\r\n    async registerUser(data = {}) {\r\n        let {user, token} = await apiService.doPost('/user/register', data);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', user);\r\n    }\r\n\r\n    async loginUser(data = {}) {\r\n        let {user, token} = await apiService.doPost('/user/login', data);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', user);\r\n    }\r\n\r\n    async logoutUser() {\r\n        let response = await apiService.doPost('/user/logout');\r\n        \r\n        if (response.success) {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { TextField, Button, FormGroup, FormHelperText, Box } from '@material-ui/core';\r\nimport UserService from '../../services/UserService';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst userService = new UserService();\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    acceptedTerms: false,\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n    name: Yup.string()\r\n        .max(15, \"Must be 15 characters or less\")\r\n        .required(\"Required\"),\r\n    email: Yup.string()\r\n        .email(\"Invalid email addresss\")\r\n        .required(\"Required\"),\r\n    acceptedTerms: Yup.boolean()\r\n        .required(\"Required\")\r\n        .oneOf([true], \"You must accept the terms and conditions.\"),\r\n    password: Yup.string()\r\n        .min(8, \"Password should contain at least 8 characters\")\r\n        .required(\"Required\"),\r\n    repeatPassword: Yup.string()\r\n        .min(8, \"Password should contain at least 8 characters\")\r\n        .required(\"Required\")\r\n        .test('passwords-match', 'Passwords must match', function (value) {\r\n            return this.parent.password === value;\r\n        }),\r\n});\r\n\r\nconst RegistrationForm = ({changeLoggedIn, history}) => {\r\n    return (\r\n        <>\r\n            <h1>Registration form</h1>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={ async (values, {setSubmitting}) => {\r\n                    await userService.registerUser(values);\r\n                    setSubmitting(true);\r\n                    changeLoggedIn(true);\r\n                    history.push('/');\r\n                }}\r\n            >\r\n                {({ values, errors, isSubmitting, isValidating, touched}) => (\r\n                    <Form>\r\n                        <Box mb={2}>\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"name\"\r\n                                    label=\"First Name\"\r\n                                    error={touched.name && !!errors.name}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"name\" error/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    label=\"Email\"\r\n                                    error={touched.email && !!errors.email}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"email\" error/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    label=\"Password\"\r\n                                    error={touched.password && !!errors.password}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"password\" error/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"repeatPassword\"\r\n                                    type=\"password\"\r\n                                    label=\"Repeat Password\"\r\n                                    error={touched.repeatPassword && !!errors.repeatPassword}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"repeatPassword\" error/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    name=\"acceptedTerms\"\r\n                                    type=\"checkbox\"\r\n                                    label=\"Accept Terms And Conditions\"\r\n                                    error={touched.acceptedTerms && !!errors.acceptedTerms}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"acceptedTerms\" error/>\r\n                            </FormGroup>\r\n                        </Box>\r\n                        \r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={isSubmitting || isValidating}>\r\n                            Submit\r\n                        </Button>\r\n                        {/* <pre>{JSON.stringify(values, null, 4)}</pre>\r\n                        <pre>{JSON.stringify(errors, null, 4)}</pre> */}\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(RegistrationForm);","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { TextField, Button, FormGroup, FormHelperText, Box } from '@material-ui/core';\r\nimport UserService from '../../services/UserService';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string()\r\n        .email(\"Invalid email address\")\r\n        .required(\"Required\"),\r\n    password: Yup.string()\r\n        .required(\"Required\"),\r\n});\r\n\r\nconst userService = new UserService();\r\n\r\nconst LoginForm = ({history, changeLoggedIn}) => {\r\n    \r\n    return (\r\n        <>\r\n            <h1>Login form</h1>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={async (values, {setSubmitting}) => { \r\n                    await userService.loginUser(values);\r\n                    setSubmitting(true);\r\n                    changeLoggedIn(true);\r\n                    history.push('/');\r\n                }}\r\n            >\r\n                {({ values, errors, isSubmitting, isValidating, touched}) => (\r\n                    <Form>\r\n                        <Box mb={2}>\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    label=\"Email\"\r\n                                    error={touched.email && !!errors.email}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"email\" error/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Field\r\n                                    as={TextField}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    label=\"Password\"\r\n                                    error={touched.password && !!errors.password}\r\n                                />\r\n                                <ErrorMessage component={FormHelperText} name=\"password\" error/>\r\n                            </FormGroup>\r\n                        </Box>\r\n\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={isSubmitting || isValidating}>\r\n                            Submit\r\n                        </Button>\r\n                        {/* <pre>{JSON.stringify(values, null, 4)}</pre>\r\n                        <pre>{JSON.stringify(errors, null, 4)}</pre> */}\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport RegistrationForm from '../registrationForm/RegistrationForm';\r\nimport LoginForm from '../loginForm/LoginForm';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function AuthenticationOptions({changeLoggedIn}) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={value} onChange={handleChange} centered>\r\n                    <Tab label=\"Login\" />\r\n                    <Tab label=\"Register\" />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <LoginForm changeLoggedIn={changeLoggedIn}/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <RegistrationForm changeLoggedIn={changeLoggedIn}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","import { Container, Grid, Box } from '@material-ui/core/';\r\nimport React from 'react';\r\nimport AuthenticationOptions from '../components/authenticationOptions/AuthenticationOptions';\r\n\r\nexport default function AuthenticationOptionsPage({changeLoggedIn}) {\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Box mt={5}>\r\n                <Grid container justify=\"center\">\r\n                    <Grid item xs={8}>\r\n                        <AuthenticationOptions changeLoggedIn={changeLoggedIn}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import ApiService from \"./ApiService\";\r\n\r\nconst apiService = new ApiService();\r\n\r\nexport default class TaskService {\r\n    async getAllTasks() {\r\n        return await apiService.doGet('/task');\r\n    }\r\n\r\n    async addTask(data = {}) {\r\n        return await apiService.doPost('/task', data);\r\n    }\r\n\r\n    async updateTask(id, data = {}) {\r\n        return await apiService.doPut(`/task/${id}`, data);\r\n    }\r\n\r\n    async deleteTask(id) {\r\n        await apiService.doDelete(`/task/${id}`);\r\n    }\r\n}","import { Container } from '@material-ui/core/';\r\nimport React, { useEffect } from 'react';\r\nimport TaskService from '../services/TaskService'\r\nimport { useState } from 'react';\r\n\r\nconst taskService = new TaskService();\r\n\r\nconst TasksPage = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setTasks(getTasks());\r\n    }, []);\r\n\r\n    const getTasks = async () => {\r\n        await taskService.getAllTasks()\r\n        console.log(tasks);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"App\">\r\n                <h1>Todo list</h1>\r\n            </div>\r\n\r\n            {/* <form action=\"\" className=\"search-form\" onSubmit={getSearch}>\r\n                <input className=\"search-bar\" type=\"text\" name=\"\" id=\"\" value={search} onChange={updateSearch} />\r\n                <button className=\"search-button\" type=\"submit\">Submit</button>\r\n            </form> */}\r\n            {/* {recipes.map(recipe => (\r\n                <Recipe\r\n                    key={recipe.recipe.label}\r\n                    title={recipe.recipe.label}\r\n                    calories={recipe.recipe.calories}\r\n                    image={recipe.recipe.image}\r\n                />\r\n            ))} */}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default TasksPage;\r\n","import { Button } from '@material-ui/core/';\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport UserService from '../../services/UserService';\r\n\r\nconst userService = new UserService();\r\n\r\nexport default function AuthButton({ isLoggedIn, changeLoggedIn }) {\r\n    let authButton;\r\n\r\n    let logout = async () => {\r\n        await userService.logoutUser();\r\n        changeLoggedIn(false);\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        authButton = (\r\n            <Link to='/' onClick={logout}>\r\n                <Button color=\"inherit\">Logout</Button>\r\n            </Link>\r\n        );\r\n    } else {\r\n        authButton = (\r\n            <Link to='/login'>\r\n                <Button color=\"inherit\">Login</Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {authButton}\r\n        </>\r\n    );\r\n};\r\n","import {\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  Container\r\n} from '@material-ui/core/';\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './MenuBar.css';\r\nimport AuthButton from '../authButton/AuthButton';\r\n\r\nconst MenuBar = ({isLoggedIn, changeLoggedIn}) => {\r\n\r\n  return (\r\n    <AppBar position=\"static\" >\r\n      <Container>\r\n        <Toolbar className=\"menu-bar\">\r\n          <Link to=\"/\">\r\n            <Typography variant=\"h6\" className=\"\" >\r\n              React TODO\r\n            </Typography>\r\n          </Link>\r\n\r\n          <AuthButton changeLoggedIn={changeLoggedIn} isLoggedIn={isLoggedIn}/>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default MenuBar;","import { Container } from '@material-ui/core/';\r\nimport React from 'react';\r\nimport logo from '../assets//logo.svg';\r\n\r\nexport default function HelloPage() {\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <p className=\"App-link\">\r\n                        React Todo list app\r\n                    </p>\r\n                </header>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route, Switch\n} from \"react-router-dom\";\nimport AuthenticationOptionsPage from './AuthenticationOptionsPage';\nimport TasksPage from './TasksPage';\nimport MenuBar from '../components/menuBar/MenuBar';\nimport HelloPage from './HelloPage';\nimport './App.css'\n\nfunction App() {\n  let [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem('token') && localStorage.getItem('user'));\n\n  return (\n    <Router basename=\"/react-todo/\">\n      <MenuBar changeLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn}/>\n      \n      <Switch>\n        <Route exact path=\"/\">\n          {!isLoggedIn && <HelloPage/>}\n          {isLoggedIn && <TasksPage/>}\n        </Route>\n        <Route path=\"/login\">\n          <AuthenticationOptionsPage changeLoggedIn={setIsLoggedIn}/>\n        </Route>\n      </Switch>\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}